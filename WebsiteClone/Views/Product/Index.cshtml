@model IEnumerable<Product>
@{
    ViewData["Title"] = "Index";

}

<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>หน้าหลัก</title>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
    <h1 class="text-center mt-4">หน้าหลัก</h1>

    <div class="text-center mt-4">
        <a href="/Management" class="btn btn-secondary">ย้อนกลับไปยังหน้า Management</a>
    </div>
    <div class="text-center mt-4">
        <button class="btn btn-primary" id="addProductBtn">เพิ่มของ</button>
    </div>
    <h2 class="mt-4 text-center">Product List</h2>

    <div class="product-list">
        @foreach (var product in Model)
        {
            <div class="product-card">
                <!-- เพิ่มรูปภาพ -->
                <img src="~/lib/img/_iupload/Steel.webp" />
                <h4>@product.Productname</h4>
                <p>@product.Description</p>
                <p>แต้มต่อวัน: @product.PricePerDay</p>
                <p>เเต้มที่ต้องการ: @product.PointsRequired</p>
                <a href="@Url.Action("Create", "Rental", new { productId = product.ProductId, identifier = ViewData["Identifier"] })"
                   class="btn-rent"
                   data-product-name="@product.Productname">Rent</a>
            </div>
        }
    </div>
        <script>
            // Add event listener to each "Rent" button
            document.querySelectorAll(".btn-rent").forEach(function (button) {
                button.addEventListener("click", function (event) {
                    event.preventDefault(); // Prevent the default link behavior

                    // Get the product name from the data attribute
                    var productName = event.target.getAttribute('data-product-name');

                    // Show SweetAlert with the product name
                    Swal.fire({
                        title: "ยืนยันการซื้อ?",
                        text: 'คุณต้องการยืนยันการซื้อ ' + productName + ' ใช่หรือไม่?',
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: 'ยืนยัน',
                        cancelButtonText: 'ยกเลิก',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // If the user confirms, navigate to the link
                            window.location.href = event.target.href; // Redirect to the Rent URL
                        }
                    });
                });
            });
        </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.getElementById("addProductBtn").addEventListener("click", function() {
            Swal.fire({
                title: 'เพิ่มสินค้าใหม่',
                html: `
                    <input id="productId" class="swal2-input" placeholder="รหัสสินค้า">
                    <input id="productName" class="swal2-input" placeholder="ชื่อสินค้า">
                    <input id="productDescription" class="swal2-input" placeholder="คำอธิบายสินค้า">
                    <input id="pricePerDay" class="swal2-input" placeholder="ราคา/วัน" type="number">
                    <input id="pointsRequired" class="swal2-input" placeholder="แต้มที่ต้องการ" type="number">
                `,
                focusConfirm: false,
                preConfirm: () => {
                    const productId = document.getElementById('productId').value;
                    const productName = document.getElementById('productName').value;
                    const productDescription = document.getElementById('productDescription').value;
                    const pricePerDay = document.getElementById('pricePerDay').value;
                    const pointsRequired = document.getElementById('pointsRequired').value;

                    // ตรวจสอบข้อมูลที่กรอก
                    if (!productId || !productName || !productDescription || !pricePerDay || !pointsRequired) {
                        Swal.showValidationMessage('กรุณากรอกข้อมูลให้ครบถ้วน');
                        return false;
                    }

                    return {
                        productId: productId,
                        productName: productName,
                        productDescription: productDescription,
                        pricePerDay: pricePerDay,
                        pointsRequired: pointsRequired
                    };
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    const {productId, productName, productDescription, pricePerDay, pointsRequired } = result.value;

                    // ส่งข้อมูลไปยัง Controller เพื่อลงในฐานข้อมูล
                    fetch('/Product/AddProduct', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            ProductId:   productId,
                            ProductName: productName,
                            Description: productDescription,
                            PricePerDay: pricePerDay,
                            PointsRequired: pointsRequired
                        })
                    }).then(response => response.json()).then(data => {
                        if (data.success) {
                            Swal.fire('สำเร็จ!', 'สินค้าได้ถูกเพิ่มเรียบร้อยแล้ว', 'success');
                        } else {
                            Swal.fire('ล้มเหลว!', 'ไม่สามารถเพิ่มสินค้าได้', 'error');
                        }
                    });
                }
            });
        });
    </script>
    <script src="~/js/site.js"></script>
</body>
</html>



